@using Resources
@model Ilaro.Admin.ViewModels.ChangesViewModel

@{
    Layout = "~/Views/IlaroAdmin/_Layout.cshtml";
    ViewBag.Title = IlaroAdminResources.Changes + " " + Model.EntityChangesFor.Plural;
}

@section Breadcrumb
{
    <ul class="breadcrumb">
        <li>@Html.ActionLink(IlaroAdminResources.Index_Title, "Index")</li>
        <li>@Html.ActionLink(Model.EntityChangesFor.GroupName, "Group", new { groupName = Model.Entity.GroupName })</li>
        <li>@Html.ActionLink(Model.EntityChangesFor.Plural, "List", new { entityName = Model.EntityChangesFor.Name })</li>
        <li class="active">@IlaroAdminResources.Changes</li>
    </ul>
}

<div class="clearfix">
    <h2 class="pull-left">@Model.Entity.Plural</h2>
    @if (Model.IsSearchActive)
	{
		using (Html.BeginForm("Changes", "IlaroAdmin", new { page = Model.PagerInfo.Current }, FormMethod.Get, new { @class = "pull-left col-md-3" }))
        {
            foreach (var filter in Model.ActiveFilters)
            {
                @Html.Hidden(filter.Property.Name, filter.Value)
            }
            @Html.Hidden("entityName", Model.Entity.Name)
            @Html.Hidden("pp", Model.PerPage)
            @Html.Hidden("o", Model.Order)
            @Html.Hidden("od", Model.OrderDirection)
            <div class="input-group">
                @Html.TextBox("sq", Model.SearchQuery, new { @class = "form-control" })
                <span class="input-group-btn">
                    <button class="btn btn-default" type="submit">@IlaroAdminResources.Search</button>
                </span>
            </div>
        }
    }
</div>

<div class="clearfix" style="margin-bottom:10px">
    <div class="btn-group btn-group-sm pull-right">
        <button class="btn btn-default active" id="make-table-large"><span class="glyphicon glyphicon-th-large"></span></button>
        <button class="btn btn-default" id="make-table-condensed"><span class="glyphicon glyphicon-th"></span></button>
    </div>
</div>

<table id="table-entity" class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            @foreach (var column in Model.Columns)
            {
                <th>
                    <span @Html.Condition(!string.IsNullOrEmpty(column.Description), () => "title=\"" + column.Description + "\"")>
                        @Html.SortColumnLink(Model.Entity, column, Model.Filters, Model.SearchQuery, Model.PerPage)
                        <i class="glyphicon glyphicon-chevron-@column.SortDirection"></i>
                    </span>
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var row in Model.Data)
        {
            <tr>
                @foreach (var item in row.Values)
                {
                    <td>@Html.DisplayFor(m => item, item.Property.DisplayTemplateName)</td>
                }
            </tr>
        }
    </tbody>
</table>

<div class="clearfix">
    <div class="pull-left" style="margin-right:10px">
        @using (Html.BeginForm("Changes", "IlaroAdmin", new { page = Model.PagerInfo.Current }, FormMethod.Get, new { @class = "form-inline" }))
        {
            foreach (var filter in Model.ActiveFilters)
            {
                @Html.Hidden(filter.Property.Name, filter.Value)
            }
            @Html.Hidden("entityName", Model.Entity.Name)
            @Html.Hidden("sq", Model.SearchQuery)
            @Html.Hidden("o", Model.Order)
            @Html.Hidden("od", Model.OrderDirection)
            <div class="form-group">
                <label for="pp" class="control-label">@IlaroAdminResources.OnPage</label>
                @Html.DropDownList("pp",
                 new SelectList(new Dictionary<int, int> { { 5, 5 }, { 10, 10 }, { 15, 15 }, { 20, 20 }, { 25, 25 }, { 50, 50 }, { 100, 100 } }, "Key", "Value", 10),
                 new Dictionary<string, object> { { "class", "autoPostBack form-control" }, { "id", "per-page-entity" } })
            </div>
        }
    </div>

    <div class="pull-left" style="margin-right:10px">
        @{Html.RenderPartial("_Paging", Model.PagerInfo);}
    </div>

    <div class="pull-left" style="line-height:29px">
        @IlaroAdminResources.Founded <strong>@Model.PagerInfo.TotalItems</strong></div>
</div>

@section Sidebar
{
    @if (Model.Filters.Count > 0)
    {
        <h2>@IlaroAdminResources.Filters</h2>
        <ul class="nav nav-list">
            <li><a href="@Url.Action("Changes", new { entityName = Model.Entity.Name, page = Model.PagerInfo.Current })">@IlaroAdminResources.RemoveFilters</a></li>
            @foreach (var filter in Model.Filters)
            {
                <li class="nav-header">
                    @*@Html.GetFilterIcon(filter)*@
                    @filter.Property.DisplayName
                </li>
                foreach (var option in filter.Options)
                {
                    <li @Html.Condition(option.Selected, () => "class=\"active\"")>@Html.FilterOptionLink(Model.Entity, filter, option, Model.Filters, Model.SearchQuery, Model.Order, Model.OrderDirection, Model.PerPage)</li>
                }
            }
        </ul>
    }
}@section Scripts
{
    <script type="text/javascript">
        $().ready(function () {
            $('#make-table-large').click(function () {
                var $this = $(this).addClass('active').siblings().removeClass('active');
                $('#table-entity').removeClass('table-condensed');
                $('#pagination-entity').removeClass('pagination-sm');
                $('#per-page-entity').removeClass('select-sm');
            });
            $('#make-table-condensed').click(function () {
                var $this = $(this).addClass('active').siblings().removeClass('active');
                $('#table-entity').addClass('table-condensed');
                $('#pagination-entity').addClass('pagination-sm');
                $('#per-page-entity').addClass('select-sm');
            });
        });
    </script>
}
