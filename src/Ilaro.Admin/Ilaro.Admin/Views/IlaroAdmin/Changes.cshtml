@model Ilaro.Admin.ViewModels.ChangesViewModel

@{
    Layout = "~/Views/IlaroAdmin/_Layout.cshtml";
    ViewBag.Title = Resources.IlaroAdminResources.Changes + " " + Model.EntityChangesFor.Plural;
}

@section Breadcrumb
{
    <ul class="breadcrumb">
        <li>@Html.ActionLink(Resources.IlaroAdminResources.Index_Title, "Index")</li>
        <li>@Html.ActionLink(Model.EntityChangesFor.GroupName, "Group", new { groupName = Model.Entity.GroupName })</li>
        <li>@Html.ActionLink(Model.EntityChangesFor.Plural, "Details", new { entityName = Model.EntityChangesFor.Name })</li>
        <li class="active">@Resources.IlaroAdminResources.Changes</li>
    </ul>
}

<h2>@Model.Entity.Plural</h2>

<div class="clearfix">
    @if (Model.IsSearchActive)
    {
        using (Html.BeginForm("Changes", "IlaroAdmin", new { page = Model.PagerInfo.Current }, FormMethod.Get))
        {
            foreach (var filter in Model.ActiveFilters)
            {
                @Html.Hidden(filter.Property.Name, filter.Value)
            }
            @Html.Hidden("entityName", Model.Entity.Name)
            @Html.Hidden("pp", Model.PerPage)
            @Html.Hidden("o", Model.Order)
            @Html.Hidden("od", Model.OrderDirection)
            <div class="input-append">
                @Html.TextBox("sq", Model.SearchQuery, new { @class = "span2" })
                <button class="btn">@Resources.IlaroAdminResources.Search</button>
            </div>
        }
    }
</div>

<table class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            @foreach (var column in Model.Columns)
            {
                <th>
                    <span @Html.Condition(!string.IsNullOrEmpty(column.Description), () => "title=\"" + column.Description + "\"")>
                        @Html.SortColumnLink(Model.Entity, column, Model.Filters, Model.SearchQuery, Model.PerPage)
                        <i class="glyphicon glyphicon-chevron-@column.SortDirection"></i>
                    </span>
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var row in Model.Data)
        {
            <tr>
                @foreach (var item in row.Values)
                {
                    <td>@Html.DisplayFor(m => item, item.Property.DisplayTemplateName)</td>
                }
            </tr>
        }
    </tbody>
</table>

<p class="pull-right">@Resources.IlaroAdminResources.Founded <strong>@Model.PagerInfo.TotalItems</strong></p>

<div class="pull-left" style="margin-top:1px;">
    @using (Html.BeginForm("Changes", "IlaroAdmin", new { page = Model.PagerInfo.Current }, FormMethod.Get, new { @class = "form-inline" }))
    {
        foreach (var filter in Model.ActiveFilters)
        {
            @Html.Hidden(filter.Property.Name, filter.Value)
        }
        @Html.Hidden("entityName", Model.Entity.Name)
        @Html.Hidden("sq", Model.SearchQuery)
        @Html.Hidden("o", Model.Order)
        @Html.Hidden("od", Model.OrderDirection)
        <div class="control-group">
            <label for="pp" class="control-label">@Resources.IlaroAdminResources.OnPage</label>
            @Html.DropDownList("pp", new SelectList(new Dictionary<int, int> { { 5, 5 }, { 10, 10 }, { 15, 15 }, { 20, 20 }, { 25, 25 }, { 50, 50 }, { 100, 100 } }, "Key", "Value", 10), new { @class = "autoPostBack" })
        </div>
    }
</div>

<div class="offset1">
    @{Html.RenderPartial("_Paging", Model.PagerInfo);}
</div>

@section Sidebar
{
    @if (Model.Filters.Count > 0)
    {
        <h2>@Resources.IlaroAdminResources.Filters</h2>
        <div class="sidebar-nav well">
            <ul class="nav nav-list">
                <li><a href="@Url.Action("Details", new { entityName = Model.Entity.Name, page = Model.PagerInfo.Current })">@Resources.IlaroAdminResources.RemoveFilters</a></li>
                @foreach (var filter in Model.Filters)
                {
                    <li class="nav-header">
                        @*@Html.GetFilterIcon(filter)*@
                        @filter.Property.DisplayName
                    </li>
                    foreach (var option in filter.Options)
                    {
                        <li @Html.Condition(option.Selected, () => "class=\"active\"")>@Html.FilterOptionLink(Model.Entity, filter, option, Model.Filters, Model.SearchQuery, Model.Order, Model.OrderDirection, Model.PerPage)</li>
                    }
                }
            </ul>
        </div>
    }
}
